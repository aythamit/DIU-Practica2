
package diu.practica2;

import java.awt.Color;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;

public class DIUPractica2 extends javax.swing.JFrame {

    
    private int[][] matriz ;
    public static int[][] generaMatriz(int dimension, int minimo, int maximo){
        int[][] matriz = new int[dimension][dimension];
        Random r = new Random();
	
        for(int i = 0; i < dimension; i++){
            for(int j = 0; j < dimension; j++){
                matriz[i][j] = r.nextInt((maximo - minimo) + 1) + minimo;
                //System.out.print(matriz[i][j] + " ");
            }
            //System.out.println("");
        }
        
        return matriz;
    }
    public static void escribeMatriz(JTextArea textArea , int[][] matriz, int umbral){
        textArea.setText(null);
        for(int i = 0; i < matriz.length; i++){
            for(int j = 0; j < matriz.length; j++){
                if(matriz[i][j] > umbral)
                    textArea.append(matriz[i][j] + "\t");
                else
                    textArea.append("-\t");
            }
            textArea.append("\n");
        }
    }
    public DIUPractica2() {
        initComponents();
         matriz = generaMatriz(Integer.parseInt(textDimension.getText()) , Integer.parseInt(textMinimo.getText()),
        Integer.parseInt(textMaximo.getText()));
        escribeMatriz(textMatriz, matriz, sliderUmbral.getValue());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelTop = new javax.swing.JPanel();
        labelDimension = new javax.swing.JLabel();
        labelMinimo = new javax.swing.JLabel();
        labelMaximo = new javax.swing.JLabel();
        labelUmbral = new javax.swing.JLabel();
        textDimension = new javax.swing.JTextField();
        textMinimo = new javax.swing.JTextField();
        textMaximo = new javax.swing.JTextField();
        sliderUmbral = new javax.swing.JSlider();
        panelBot = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textMatriz = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelTop.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        labelDimension.setText("Dimensión Matriz Cuadrada: ");

        labelMinimo.setText("Valor Mínimo: ");

        labelMaximo.setText("Valor Máximo: ");

        labelUmbral.setText("Umbral:");

        textDimension.setText("7");
        textDimension.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textDimensionActionPerformed(evt);
            }
        });
        textDimension.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textDimensionKeyReleased(evt);
            }
        });

        textMinimo.setText("50");
        textMinimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textMinimoActionPerformed(evt);
            }
        });

        textMaximo.setText("120");
        textMaximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textMaximoActionPerformed(evt);
            }
        });

        sliderUmbral.setMajorTickSpacing(5);
        sliderUmbral.setMinimum(50);
        sliderUmbral.setMinorTickSpacing(1);
        sliderUmbral.setPaintLabels(true);
        sliderUmbral.setPaintTicks(true);
        sliderUmbral.setToolTipText("");
        sliderUmbral.setValue(60);
        sliderUmbral.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderUmbralStateChanged(evt);
            }
        });

        javax.swing.GroupLayout panelTopLayout = new javax.swing.GroupLayout(panelTop);
        panelTop.setLayout(panelTopLayout);
        panelTopLayout.setHorizontalGroup(
            panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTopLayout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelTopLayout.createSequentialGroup()
                        .addComponent(labelUmbral)
                        .addGap(28, 28, 28)
                        .addComponent(sliderUmbral, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelTopLayout.createSequentialGroup()
                        .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(panelTopLayout.createSequentialGroup()
                                .addComponent(labelMinimo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(textMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelDimension))
                        .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelTopLayout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(textDimension, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTopLayout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addComponent(labelMaximo)
                                .addGap(18, 18, 18)
                                .addComponent(textMaximo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelTopLayout.setVerticalGroup(
            panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTopLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelDimension)
                    .addComponent(textDimension, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textMaximo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelMaximo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(textMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelMinimo))
                .addGroup(panelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelTopLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(sliderUmbral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelTopLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(labelUmbral, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        sliderUmbral.setMaximum(120);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);

        textMatriz.setColumns(20);
        textMatriz.setRows(5);
        jScrollPane1.setViewportView(textMatriz);

        javax.swing.GroupLayout panelBotLayout = new javax.swing.GroupLayout(panelBot);
        panelBot.setLayout(panelBotLayout);
        panelBotLayout.setHorizontalGroup(
            panelBotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBotLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 597, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );
        panelBotLayout.setVerticalGroup(
            panelBotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBotLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelTop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelBot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(panelTop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelBot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sliderUmbralStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderUmbralStateChanged
        if (matriz != null){
            escribeMatriz(textMatriz, matriz, sliderUmbral.getValue());
        }
    }//GEN-LAST:event_sliderUmbralStateChanged

    private void textDimensionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textDimensionActionPerformed
        matriz = generaMatriz(Integer.parseInt(textDimension.getText()) , Integer.parseInt(textMinimo.getText()),
        Integer.parseInt(textMaximo.getText()));
        escribeMatriz(textMatriz, matriz, sliderUmbral.getValue());
    }//GEN-LAST:event_textDimensionActionPerformed

    private void textMinimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textMinimoActionPerformed
        
        if(Integer.parseInt(textMinimo.getText()) < Integer.parseInt(textMaximo.getText())){
         textMinimo.setBackground(Color.white);
        sliderUmbral.setMinimum(Integer.parseInt(textMinimo.getText()));
        matriz = generaMatriz(Integer.parseInt(textDimension.getText()) , Integer.parseInt(textMinimo.getText()),
        Integer.parseInt(textMaximo.getText()));
        escribeMatriz(textMatriz, matriz, sliderUmbral.getValue());
        }else{
            textMinimo.setBackground(Color.red);
            JOptionPane.showMessageDialog(this, "Error. \nEl numero mínimo no puede ser mayor que el máximo");
        }
    }//GEN-LAST:event_textMinimoActionPerformed

    private void textMaximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textMaximoActionPerformed
         if(Integer.parseInt(textMinimo.getText()) < Integer.parseInt(textMaximo.getText())){
         textMaximo.setBackground(Color.white);
        sliderUmbral.setMaximum(Integer.parseInt(textMaximo.getText()));
        matriz = generaMatriz(Integer.parseInt(textDimension.getText()) , Integer.parseInt(textMinimo.getText()),
        Integer.parseInt(textMaximo.getText()));
        escribeMatriz(textMatriz, matriz, sliderUmbral.getValue());
        }else{
            textMaximo.setBackground(Color.red);
            JOptionPane.showMessageDialog(this, "Error. \nEl numero máximo no puede ser mayor que el mínimo");
        }
    }//GEN-LAST:event_textMaximoActionPerformed

    private void textDimensionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textDimensionKeyReleased
        if(!textDimension.getText().isEmpty() && Integer.parseInt(textDimension.getText()) < 11 ){
        matriz = generaMatriz(Integer.parseInt(textDimension.getText()) , Integer.parseInt(textMinimo.getText()),
        Integer.parseInt(textMaximo.getText()));
        escribeMatriz(textMatriz, matriz, sliderUmbral.getValue());
        }else{
            textMatriz.setText(null);
        }
    }//GEN-LAST:event_textDimensionKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DIUPractica2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DIUPractica2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DIUPractica2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DIUPractica2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DIUPractica2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelDimension;
    private javax.swing.JLabel labelMaximo;
    private javax.swing.JLabel labelMinimo;
    private javax.swing.JLabel labelUmbral;
    private javax.swing.JPanel panelBot;
    private javax.swing.JPanel panelTop;
    private javax.swing.JSlider sliderUmbral;
    private javax.swing.JTextField textDimension;
    private javax.swing.JTextArea textMatriz;
    private javax.swing.JTextField textMaximo;
    private javax.swing.JTextField textMinimo;
    // End of variables declaration//GEN-END:variables
}
